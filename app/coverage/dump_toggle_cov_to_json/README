# Toggle Coverage Analysis Tool

C++ UCAPI tool that dumps toggle coverage for all Verilog/SystemVerilog modules in a design, generating JSON and HTML reports.

## Quick Start

```bash
make run                    # Run with defaults (all modules)
make run DESIGN_FILE=designs/soc_register_hierarchy.sv  # Custom design
make html                   # Generate HTML report
```

## Usage

| Command       | Description                             |
|---------------|-----------------------------------------|
| `make run`    | Run simulation + generate toggle report |
| `make html`   | Generate HTML coverage report           |
| `make clean`  | Remove build artifacts                  |
| `make help`   | Show all options                        |

### Parameters

- `DESIGN_FILE`: Path to Verilog design (default: `designs/jukebox.v`)

## Output

Files generated in `build/`:
- `toggle_report.json` – JSON coverage data
- `simv.vdb` – VCS coverage database  
- `html/` – HTML report (after `make html`)

### JSON Format
```json
{
  "modules": [
    {
      "module": "station",
      "toggle_coverage": [
        { "hdl_signal_path": "trki[0]", "toggle_type": "0 -> 1", "status": "Covered" },
        { "hdl_signal_path": "trki[0]", "toggle_type": "1 -> 0", "status": "Uncovered" }
      ]
    },
    {
      "module": "cd",
      "toggle_coverage": [
        { "hdl_signal_path": "clk", "toggle_type": "0 -> 1", "status": "Covered" },
        { "hdl_signal_path": "clk", "toggle_type": "1 -> 0", "status": "Covered" }
      ]
    }
  ]
}
```

## Requirements

- Synopsys VCS with UCAPI support
- C++11 compiler
- `VCS_HOME` environment variable set

## Troubleshooting

**No coverage data:**
- Verify modules exist: `grep -n "module" your_design.v`
- Check VCS coverage settings
- Ensure modules have signals (not just parameters)

**Build errors:**
- Check `VCS_HOME`: `echo $VCS_HOME`
- Verify UCAPI: `ls $VCS_HOME/lib/ucapi*`
- Use C++11: `export CXX=g++ -std=c++11`
